apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
  namespace: {{ .Values.namespace }}
  labels:
    app: prowlarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prowlarr
  template:
    metadata:
      labels:
        app: prowlarr
    spec:
      securityContext:
        fsGroup: {{ .Values.pgid }}
      containers:
        - name: prowlarr
          image: {{ .Values.images.prowlarr }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: {{ .Values.prowlarr.ports.http }}
          env:
            - name: PUID
              value: "{{ .Values.puid }}"
            - name: PGID
              value: "{{ .Values.pgid }}"
            - name: TZ
              value: "{{ .Values.tz }}"
            - name: UMASK
              value: "{{ .Values.umask }}"
          volumeMounts:
            - name: config
              mountPath: /config
        - name: flaresolverr
          image: {{ .Values.images.flaresolverr }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: flare-http
              containerPort: {{ .Values.flaresolverr.ports.http }}
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: prowlarr-config
