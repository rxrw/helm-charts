apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  namespace: {{ .Values.namespace }}
  labels:
    app: radarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      containers:
        - name: radarr
          image: {{ .Values.images.radarr }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: {{ .Values.ports.radarr }}
          env:
            - name: PUID
              value: "{{ .Values.puid }}"
            - name: PGID
              value: "{{ .Values.pgid }}"
            - name: TZ
              value: "{{ .Values.tz }}"
            - name: UMASK
              value: "{{ .Values.umask }}"
          volumeMounts:
            - name: config
              mountPath: /config
            - name: media
              mountPath: /media
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: radarr-config
        - name: media
          persistentVolumeClaim:
            claimName: {{ .Values.media.pvcName }}
